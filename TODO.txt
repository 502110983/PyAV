
- `make test-assets` -> into tests/assets/
- TestCase.sandbox -> dated sandbox; ln -s $(date) last
- TestCase.sandboxed(*args, mkdir=True) -> os.path.join and os.makedirs
- TestCase.rms_diff(one, two) -> Root-mean-square diff
- try to wrap API of testsrc filters
- Vagrant for two environments for ffmpeg and libav
    cd /vagrant; python setup.py build -b /tmp install
    cd; PYTHONPATH=/vagrant nosetests tests

    vagrant ssh ffmpeg -c 'cd /vagrant; ~/venv/bin/python setup.py build -b /tmp install; cd; PYTHONPATH=/vagrant venv/bin/nosetests tests'

    libav needs to have LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib set for
    both building and testing

- Tox for various versions?
- av.errno module


- FFmpeg tutorial: http://dranger.com/ffmpeg/
	- also has function reference: http://dranger.com/ffmpeg/functions.html
	- updated tutorial code: https://github.com/chelyaev/ffmpeg-tutorial

- Even out more of the differences:
    - See README of https://github.com/chelyaev/ffmpeg-tutorial

- Can Packet.decode yield multiple frames, or is that the old API?
    See: http://ffmpeg.mplayerhq.hu/doxygen/trunk/group__lavf__decoding.html#ga4fdb3084415a82e3810de6ee60e46a61
    Video packets contain exactly one frame. Audio packets can contain an integer number of frames.

- Figure out how to grab FFmpeg samples.

- Move calling `configure` into an extension of the build command so that it
  does not run until it needs to.

- VideoStream.setup_conversion(size, format, etc.)

- How to interpret raw audio?
    http://ffmpeg.org/doxygen/trunk/doc_2examples_2filtering_audio_8c-example.html#a84

- Move decoding into Packet from Stream?

- Implement __getbuffer__ and __releasebuffer__ for new-style buffers.
    See: http://www.python.org/dev/peps/pep-3118/

- Stop mimicking the underlying project structure, and break into (many) more
  modules:
    - av.format.context/input/output
    - av.stream.core/video/audio/subtitle/etc.
    - av.codec.core/video/audio/subtitle
    - av.packet (if it doesn't vanish alltogether)
    - av.frame.core/video/audio
    - av.subtitle.frame/rect

- Skip the packet stage altogether?
    - av.format.Context.demux() could directly yield frames.

- Move away from generator from av.format.Context.demux(), so that the API makes
  more sense when we get around to adding Context.seek(time)?

- Replicate av_frame_get_best_effort_timestamp
    http://ffmpeg.org/pipermail/ffmpeg-devel/2011-February/104327.html
    http://pastebin.com/Aq8eDZw3/
    http://web.archiveorange.com/archive/v/yR2T4bybpYnYCUXmzAI5

